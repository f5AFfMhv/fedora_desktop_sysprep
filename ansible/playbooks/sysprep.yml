- name: Provision Fedora Desktop
  gather_facts: true
  hosts: prd
  tasks:
    - name: Add repositories
      ansible.builtin.yum_repository:
        name: "{{ item.name }}"
        description: "{{ item.desc }}"
        baseurl: "{{ item.url }}"
        gpgkey: "{{ item.gpgkey }}"
        file: my_repos
        gpgcheck: true
        enabled: true
      with_items: "{{ enable_repositories }}"
      tags:
        - repo
        - install

    - name: Disable repositories
      ansible.builtin.yum_repository:
        name: "{{ item.name }}"
        description: "{{ item.desc }}"
        baseurl: "{{ item.url }}"
        file: "{{ item.file }}"
        enabled: false
      with_items: "{{ disable_repositories }}"
      tags:
        - repo
        - install

    - name: Update system
      ansible.builtin.dnf:
        name: "*"
        state: latest
      tags:
        - install

    - name: Remove bloat
      ansible.builtin.dnf:
        name: "{{ bloat }}"
        state: absent
        autoremove: true
      tags:
        - bloat
        - install

    - name: Install rpm packages
      ansible.builtin.dnf:
        name: "{{ rpms }}"
        state: present
      tags:
        - install

    - name: Add flathub repository
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
      tags:
        - flatpak
        - install

    - name: Remove filtered option from flathub repository
      ansible.builtin.command:
        cmd: flatpak remote-modify flathub --no-filter
      register: output
      changed_when: output.rc == 0
      tags:
        - flatpak
        - install

    - name: Install flatpak packages
      community.general.flatpak:
        name: "{{ flatpaks }}"
        state: present
      tags:
        - flatpak
        - install

    - name: Download get-pip.py script
      ansible.builtin.get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: /tmp/get-pip.py
        mode: "0770"
      tags:
        - python
        - install

    - name: Install pip3.10
      ansible.builtin.command: python3.10 /tmp/get-pip.py
      register: out
      changed_when: out.rc == 0
      tags:
        - python
        - install

    - name: Upgrade pip
      ansible.builtin.pip:
        name:
          - pip
          - setuptools
          - wheel
          - virtualenv
        extra_args: --upgrade
      tags:
        - python
        - install

    - name: Install python packages
      ansible.builtin.pip:
        name: "{{ item.name }}"
        extra_args: --no-cache-dir
        executable: "{{ item.pip }}"
      with_items: "{{ python_packages }}"
      tags:
        - python
        - install

    - name: Add sudo rules
      community.general.sudoers:
        name: "{{ user }}-sudo-rules"
        state: present
        user: "{{ user }}"
        nopassword: true
        commands: "{{ allow_sudo }}"
      tags:
        - config

    - name: Enable/disable services
      ansible.builtin.service:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
        enabled: "{{ item.enabled }}"
      with_items: "{{ services }}"
      tags:
        - config

    - name: Add DNS configuration
      ansible.builtin.template:
        src: resolv.conf.j2
        dest: /etc/resolv.conf
        owner: root
        group: root
        mode: "0644"
      tags:
        - config

    - name: Create cron jobs
      ansible.builtin.cron:
        name: "{{ item.name }}"
        special_time: reboot
        user: "{{ user }}"
        job: "{{ item.job }}"
      with_items: "{{ cron_jobs }}"
      tags:
        - config

    - name: Sync git repositories
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        force: true
        key_file: "/home/{{ user }}/.ssh/id_rsa"
        accept_hostkey: true
      with_items: "{{ git_repos }}"
      tags:
        - config
        - git

    - name: Change git directory owner
      ansible.builtin.file:
        path: "{{ git_dir }}"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        recurse: True
      tags:
        - config
        - git

    - name: Create gnome extensions directory
      ansible.builtin.file:
        path: "/home/{{ user }}/.local/share/gnome-shell/extensions"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "0755"
        state: directory
      tags:
        - config

    - name: Create a symbolic links
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        state: link
      with_items: "{{ symlinks }}"
      tags:
        - config

    - name: Deploy dotfiles
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: "0664"
        remote_src: true
      with_items: "{{ dotfiles }}"
      tags:
        - config
